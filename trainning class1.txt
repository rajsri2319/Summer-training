1.sorting list with less time complexity:
lst1=[2, 5, 7, 9]
lst2=[1,3,6,7,10,13]
lst3=lst1+lst2
lst3.sort()
print(lst3)

o/p:[1, 2, 3, 5, 6, 7, 7, 9, 10, 13]

2.take 2 list write a code using merge sort:
a=[2, 5, 7, 9]
b=[1,3,6,7,10,13]
c=[]
i,j=0,0
while(i<len(a) and j<len(b)):
    if(a[i] < b[j]):
        c.append(a[i])
        i=i+1
    else:
        c.append(b[j])
        j=j+1
if(j<len(b)):
    c.extend(b[j:])
if(i<len(a)):
    c.extend(c[i:])
o/p:code execution is successful    

3.code using slide window
a='aaabbaaaaaddd'
count=1
b=''
for i in range(len(a)-1):
    if(a[i]==a[i+1]):
        count=count+1
    else:
        b=b+a[i]+str(count)
        count=1
b=b+a[i]+str(count)
print(b)
o/p:a3b2a4d3
4.repeated numbers
i/p=[3,5,3,2,5,6,7,3,2,5,6,1,9,2]
o/p=3 - 3
5 - 3
2 - 3
6 - 2
7 - 1
1 - 1
9 - 1
//code is here///
a=[3,5,3,2,5,6,7,3,2,5,6,1,9,2]
b=[]
for i in a:
    if(i not in b):
        b.append(i)
for i in b:
    print(i,"-",a.count(i))
5.using built in function 
a="f46feLKSy56u#@&56hIjbn6KJhA"
uv,uc,lv,lc,d,s=0,0,0,0,0,0
for i in a:
    if(i.isupper()):
        if(i in 'AEIOU'):
            uv += 1
        else:
            uc += 1
    elif(i.islower()):
        if(i in 'aeiou'):
            lv += 1
        else:
            lc += 1
    elif(i.isdigit()):
        d += 1
    elif(i.isspecial):
        s += 1
print(f"lv - {lv} uv - {uv} d - {digit} s - {special}")

6.Given i/p=placements
        o/p=plAcEmEnts
//code//
a="placements"
vowels="aeiou"
b=""
for i in a:
    if i in vowels:
        b += i.upper()
    else:
        b += i
print(b)
o/p=plAcEmEnts

7.Given i/p=school
        o/p=school
//code//
a="school"
vowel="a,e,i,o,u"
b=""
for i in a:
    if i in vowel:
        b += i.upper()
    else:
        b += i
print(b)
o/p=schOOl

8.count the numbers between 300 to 400
//code//
a = 300
b = 400
for i in range(a, b + 1):
    if i % 7 == 0:
        print(i)
o/p=

9.Given i/p=14
        o/p=17 print it is prime number  or not?
//code//
a = 14
b = 17
for i in range(a, b+1):
    if i > 1:  
        prime = True
        for j in range(2, i):
            if i % j == 0:  
                prime = False
                break
        if prime:
            print()
o/p=17
10.print the factors of given a=12
//code//
a = 12
for i in range(1, a+1):
    if(a%i==0):
        print(i)
o/p=1
2
3
4
6
12
11.print prime number r not
//code//
a = 49
c=0
for i in range(2,(a//2)+1):
    if(a%i==0):
        c=c+1
        break
if(c==0):
    print("prime")
else:
    print("not prime")
o/p=not prime

12.print the next prime number from given number 
   example i/p=10
   then o/p=11
//code//
a=int(input())
while(1):
    c=0
    for i in range(2,(a//2)+1):
        if(a%i==0):
            c=c+1
            break
    if(c==0):
        print(a)
        break
    else:
        a=a+1
 o/p=11
13.count the prime digit in given problem
//code//
n=78543
c=0
while(n):
    if(n%10 in [2,3,5,7]):
        c=c+1
    n=n//10
print(c)
        
o/p=3
14.Write a code to print the count of given input that is the missed character to generate the password
   example i/p=asd123@#
           o/p=1 verify many examples for this problem like i/p=123456789,o/p=3 and i/p=ab,o/p=6,i/p=A1234,o/p=2
//code//
n="nm&6u@"
u,i,d,s=0,0,0,0
for i in n:
    if(i.isdigit()):
        d=1
    elif(i.islower()):
        l=1
    elif(i.isupper()):
        u=1
    else:
        s=1
m=4 -(u+l+d+s)
if(len(n)+m)<8 :
    print(8-len(n))
else:
    print(m)
o/p=2

        
        
        

    
    